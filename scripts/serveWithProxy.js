import{createRequire as e}from"module";import*as o from"@capacitor/core";import*as r from"colors";var t={n:e=>{var o=e&&e.__esModule?()=>e.default:()=>e;return t.d(o,{a:o}),o},d:(e,o)=>{for(var r in o)t.o(o,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:o[r]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o)};const n=e(import.meta.url)("path");var s=t.n(n);const a=e(import.meta.url)("child_process"),i=e(import.meta.url)("url"),l=(g={Capacitor:()=>o.Capacitor},y={},t.d(y,g),y),c=(0,i.fileURLToPath)("file:///Users/timmoritzkuehle/Library/CloudStorage/Dropbox/Dokumente/Coding/ionic-web-app-dev-proxy/Code/constants.js"),p=n.dirname(c),d="undefined"!=typeof process?null===process||void 0===process?void 0:process.env:void 0,u=(!l.Capacitor.isNativePlatform()&&(void 0===d.MODE||d.MODE),"undefined"!=typeof process&&process.argv.includes("--webpack-watch")),m=/Development server running!/,v=/Local: |\n/g,f=/hmr update/;var g,y;const h=(e=>{var o={};return t.d(o,e),o})({default:()=>r.default}),w=(h.default.grey((new Date).toLocaleTimeString(Intl.DateTimeFormat().resolvedOptions().locale)),h.default.cyan.bold(" [webAppDevProxy] "),e=>{console.log(h.default.red("  ➜ Error: Unable to serve Ionic App")+h.default.cyan(`\n\nNote: The ${h.default.yellow("serveWithProxy")} script is supposed to run in an Ionic project directory.\nPlease make sure that the Ionic CLI is installed on your system and that \nthis script is executed in the root directory of your Ionic project.\nIf you intend to run the proxy server only, use the ${h.default.yellow("startProxyServer")} script.\nFor more information, read the original error message below.\n\n`)+h.default.red(e.message))}),I=(e,o)=>{o&&w(o),console.log("Shutting down Ionic app development server ...\n"),e.killed||e.kill("SIGTERM")};(()=>{if("undefined"==typeof process)throw new Error("Error: Incompatible environment: This script is supposed to run in a nodeJS environment")})(),console.log((u?"\n":"")+"Starting Ionic app development server ...\n");const b=(0,a.spawn)("ionic",["serve","--no-open"]);b.on("error",(e=>{w(e)})),b.stderr.on("data",(e=>{w({message:e.toString()})})),b.stdout.on("data",(e=>{const o=e.toString();if(m.test(e)){const e=((e,o)=>{const r=e.match(/Local: .*\n/);if(!r||!r.length)return I(o,{message:"Error: Unable to retrieve local Ionic app development server URL"}),null;const t=r[0].replace(v,"");return/^(https?:\/\/(www\.)?([\w0-9-]+\.?)+([a-z]{2,63})?|([0-9]{1,3}\.){3}[0-9]{1,3}):[0-9]{1,5}$/.test(t)?t:(I(o,{message:`Error: [${t}] is not a valid Ionic app development server address`}),null)})(o,b);if(!e)return;n=e,console.log(h.default.green(`  ➜ ${n}\n`));const i=(0,a.fork)(s().resolve(p,"scripts/startProxyServer.js"),[e]);return t=b,void(r=i).on("exit",(()=>{0!==r.exitCode&&(I(t),process.exit(1))}))}var r,t,n;(e=>{f.test(e)&&console.log(e.replace(/^\[(vite|webpack)\] |\n/g,""))})(o)})),process.on("SIGTERM",(()=>{I(b),process.exit(0)})),process.on("SIGINT",(()=>{I(b),process.exit(0)}));